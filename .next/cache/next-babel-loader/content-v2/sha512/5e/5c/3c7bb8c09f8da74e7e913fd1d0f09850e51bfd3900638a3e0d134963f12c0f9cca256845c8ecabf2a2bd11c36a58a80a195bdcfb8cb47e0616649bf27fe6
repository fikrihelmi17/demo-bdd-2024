{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport React, { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport styles from './New.module.scss';\nimport AnnounceBar from '../../components/Common/AnnounceBar';\nimport { getBaseURL } from '../../lib/utils/storage';\nimport fetcher from '../../lib/utils/fetcher';\n\nclass New extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      tags: [],\n      isFetching: false\n    };\n    this.contentEditable = /*#__PURE__*/React.createRef();\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleTagsChange = this.handleTagsChange.bind(this);\n    this.handleBodyChange = this.handleBodyChange.bind(this);\n    this.handleSaveNote = this.handleSaveNote.bind(this);\n  }\n\n  handleTitleChange({\n    target\n  }) {\n    this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      title: target.value\n    }));\n  }\n\n  handleTagsChange({\n    target\n  }) {\n    this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      tags: target.value.split(',').map(tag => tag.trim()).filter(tag => tag !== '')\n    }));\n  }\n\n  handleBodyChange({\n    target\n  }) {\n    this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      body: target.value\n    }));\n  }\n\n  async handleSaveNote() {\n    const {\n      title,\n      body,\n      tags\n    } = this.state;\n    this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      isFetching: true\n    }));\n\n    try {\n      await fetcher(`${getBaseURL()}notes`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          tags\n        })\n      });\n\n      if (window) {\n        window.location.href = '/';\n      }\n    } catch (error) {\n      if (window) {\n        alert(error.message);\n      }\n\n      this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        isFetching: false\n      }));\n    }\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  handleDiscardNote() {\n    if (window) {\n      window.location.href = '/';\n    }\n  }\n\n  render() {\n    const {\n      title,\n      body,\n      isFetching\n    } = this.state;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(Head, {\n        children: /*#__PURE__*/_jsx(\"title\", {\n          children: \"Add New Notes\"\n        })\n      }), /*#__PURE__*/_jsx(AnnounceBar, {}), /*#__PURE__*/_jsx(\"main\", {\n        className: styles.new_page,\n        children: /*#__PURE__*/_jsxs(\"section\", {\n          className: styles.new_page__content,\n          children: [/*#__PURE__*/_jsxs(\"header\", {\n            className: styles.new_page__header,\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              className: styles.new_page__title,\n              value: title,\n              onChange: this.handleTitleChange,\n              type: \"text\",\n              autoComplete: \"off\",\n              placeholder: \"Note title\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              className: styles.new_page__tags,\n              placeholder: \"Tag 1, Tag 2, Tag 3\",\n              type: \"text\",\n              autoComplete: \"off\",\n              onChange: this.handleTagsChange\n            })]\n          }), /*#__PURE__*/_jsx(ContentEditable, {\n            className: styles.new_page__body,\n            html: body,\n            innerRef: this.contentEditable,\n            disabled: false,\n            onChange: this.handleBodyChange\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.new_page__action,\n            children: [/*#__PURE__*/_jsx(\"button\", {\n              disabled: isFetching,\n              className: styles.update_button,\n              type: \"button\",\n              onClick: this.handleSaveNote,\n              children: \"Save Note\"\n            }), /*#__PURE__*/_jsx(\"button\", {\n              className: styles.delete_button,\n              type: \"button\",\n              onClick: this.handleDiscardNote,\n              children: \"Discard\"\n            })]\n          })]\n        })\n      })]\n    });\n  }\n\n}\n\nexport default New;","map":null,"metadata":{},"sourceType":"module"}