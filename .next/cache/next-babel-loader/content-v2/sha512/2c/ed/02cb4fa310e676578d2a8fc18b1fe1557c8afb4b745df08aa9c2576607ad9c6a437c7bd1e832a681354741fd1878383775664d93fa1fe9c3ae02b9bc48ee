{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport React, { Component } from 'react';\nimport HeadBar from '../components/Common/HeadBar';\nimport AnnounceBar from '../components/Common/AnnounceBar';\nimport Notes from '../components/Notes';\nimport FloatingButton from '../components/Common/FloatingButton';\nimport styles from './Home.module.scss';\nimport { getBaseURL } from '../lib/utils/storage';\nimport fetcher from '../lib/utils/fetcher';\n\nconst onAddNoteClick = () => {\n  if (window) {\n    window.location.href = '/notes/new';\n  }\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n      empty: false,\n      isError: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: {\n          notes\n        }\n      } = await fetcher(`${getBaseURL()}notes`);\n      this.setState(() => ({\n        notes,\n        empty: notes.length < 1\n      }));\n    } catch (error) {\n      this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        isError: true\n      }));\n    }\n  }\n\n  render() {\n    const {\n      notes,\n      isError,\n      empty\n    } = this.state;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsxs(Head, {\n        children: [/*#__PURE__*/_jsx(\"title\", {\n          children: \"Notes Apps\"\n        }), /*#__PURE__*/_jsx(\"link\", {\n          rel: \"icon\",\n          href: \"/favicon.ico\"\n        })]\n      }), /*#__PURE__*/_jsx(AnnounceBar, {}), /*#__PURE__*/_jsx(HeadBar, {}), /*#__PURE__*/_jsx(\"main\", {\n        children: isError ? /*#__PURE__*/_jsx(\"p\", {\n          className: styles.error,\n          children: \"Error displaying notes! Make sure you have done with the back-end or correct url.\"\n        }) : /*#__PURE__*/_jsx(Notes, {\n          empty: empty,\n          notes: notes\n        })\n      }), /*#__PURE__*/_jsx(FloatingButton, {\n        onClickHandler: onAddNoteClick,\n        icon: \"/icon/add.svg\",\n        text: \"Add Note\"\n      })]\n    });\n  }\n\n}\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}