{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport ContentEditable from 'react-contenteditable';\nimport styles from './Note.module.scss';\nimport FloatingButton from '../../components/Common/FloatingButton';\nimport AnnounceBar from '../../components/Common/AnnounceBar';\nimport { getBaseURL } from '../../lib/utils/storage';\nimport { convertISODate } from '../../lib/utils/date';\nimport fetcher from '../../lib/utils/fetcher';\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      note: null,\n      isError: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        id\n      } = this.props;\n      const {\n        data: {\n          note\n        }\n      } = await fetcher(`${getBaseURL()}notes/${id}`);\n      this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        note\n      }));\n    } catch (error) {\n      this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        isError: true\n      }));\n    }\n  }\n\n  renderError() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(Head, {\n        children: /*#__PURE__*/_jsx(\"title\", {\n          children: \"Notes - Not Found\"\n        })\n      }), /*#__PURE__*/_jsx(AnnounceBar, {}), /*#__PURE__*/_jsxs(\"main\", {\n        className: styles.error,\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          children: \"Error displaying notes! Make sure you have done with the back-end or correct url.\"\n        }), /*#__PURE__*/_jsx(Link, {\n          href: \"/\",\n          children: \"Back to Home\"\n        })]\n      })]\n    });\n  }\n\n  renderSuccess() {\n    const {\n      note\n    } = this.state;\n    const {\n      id,\n      title,\n      body,\n      createdAt,\n      updatedAt,\n      tags\n    } = note;\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(Head, {\n        children: /*#__PURE__*/_jsxs(\"title\", {\n          children: [\"Notes -\", ' ', title]\n        })\n      }), /*#__PURE__*/_jsx(AnnounceBar, {\n        host: \"/\"\n      }), /*#__PURE__*/_jsxs(\"main\", {\n        className: styles.detail_page,\n        children: [/*#__PURE__*/_jsxs(\"section\", {\n          className: styles.detail_page__content,\n          children: [/*#__PURE__*/_jsxs(\"header\", {\n            className: styles.detail_page__header,\n            children: [/*#__PURE__*/_jsx(\"h2\", {\n              className: styles.detail_page__title,\n              children: title\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: styles.detail_page__date,\n              children: createdAt === updatedAt ? `Created at ${convertISODate(createdAt)}` : `Updated at ${convertISODate(updatedAt)}`\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: styles.detail_page__tags,\n              children: tags.map(tag => /*#__PURE__*/_jsx(\"span\", {\n                className: styles.tag,\n                children: tag\n              }, tag))\n            })]\n          }), /*#__PURE__*/_jsx(ContentEditable, {\n            disabled: true,\n            html: body,\n            className: styles.detail_page__body\n          })]\n        }), /*#__PURE__*/_jsx(FloatingButton, {\n          onClickHandler: () => {\n            if (window) {\n              window.location.href = `/notes/${id}/edit`;\n            }\n          },\n          text: \"Edit Note\",\n          icon: \"/icon/edit.svg\"\n        })]\n      })]\n    });\n  }\n\n  render() {\n    const {\n      isError,\n      note\n    } = this.state;\n\n    if (isError) {\n      return this.renderError();\n    }\n\n    if (note) {\n      return this.renderSuccess();\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {});\n  }\n\n}\n\nexport async function getServerSideProps({\n  params\n}) {\n  const {\n    id\n  } = params;\n  return {\n    props: {\n      id\n    }\n  };\n}\nexport default Note;","map":null,"metadata":{},"sourceType":"module"}